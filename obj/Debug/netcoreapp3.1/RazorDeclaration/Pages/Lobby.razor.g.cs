// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace MonopolyCash.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using MonopolyCash;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using System.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Blazored.Toast;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\_Imports.razor"
using Blazored.Toast.Services;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\Pages\Lobby.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/lobby")]
    public partial class Lobby : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 57 "C:\Users\kobya\Desktop\Code Folders\VS Code\MonopolyCash\Pages\Lobby.razor"
       
    Dictionary<String,String> playerData;
    HubConnection connection;
    string gameKey;
    int playerID;

    protected override async Task OnInitializedAsync()
    {
        connection = new HubConnectionBuilder()
        .WithUrl("https://monopolycash20210106194636.azurewebsites.net/gamehub")
        .Build();
        await connection.StartAsync();
        connection.On<String[]>("joinedRoom", NotifyUserJoin);
        connection.On<String>("ready", NotifyUserReady);

        playerID = await localStorage.GetItemAsync<int>("playerID");
        playerData = await connection.InvokeAsync<Dictionary<String, String>>("readStatus",playerID);
        Object[] data = await connection.InvokeAsync<Object[]>("getPlayerData",playerID);
        gameKey = data[4].ToString();
    }
    async Task NotifyUserJoin(String[]data) 
    {
        if(data[1].Equals(gameKey))
        {
            toastService.ShowInfo(data[0] + " has joined the lobby.");
            playerData = await connection.InvokeAsync<Dictionary<String, String>>("readStatus",playerID);
            StateHasChanged();
            await Task.CompletedTask;
        }
        else 
        {
            await Task.CompletedTask;  
        }
    }
    async Task NotifyUserReady(String gameKey) 
    {
        if(this.gameKey.Equals(gameKey))
        {
            playerData = await connection.InvokeAsync<Dictionary<String, String>>("readStatus",playerID);
            StateHasChanged();
            await Task.CompletedTask;
        }
        else 
        {
            await Task.CompletedTask;  
        }
    }

    private async void update()
    {
        await connection.InvokeAsync("updateStatus",playerID);
        playerData = await connection.InvokeAsync<Dictionary<String, String>>("readStatus",playerID);
        StateHasChanged();
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Blazored.LocalStorage.ILocalStorageService localStorage { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager NavManager { get; set; }
    }
}
#pragma warning restore 1591
